plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5'
	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

def frontendProjectDir = file("frontend\\poll-frontend")
def frontendDistDir = file("frontend\\poll-frontend\\dist")

// Task to run npm install
tasks.register('npmInstall', Exec) {
	workingDir frontendProjectDir
	inputs.file("${frontendProjectDir}\\package.json")
	outputs.dir("${frontendProjectDir}\\node_modules")

	commandLine 'cmd.exe', '/c', 'npm install'
}

// Task to build the UI
tasks.register('buildFrontend', Exec) {
	workingDir frontendProjectDir
	inputs.dir("${frontendProjectDir}\\src")
	inputs.dir("${frontendProjectDir}\\node_modules")
	outputs.dir(frontendDistDir)
	dependsOn npmInstall

	commandLine 'cmd.exe', '/c', 'npm run build'
}

// Task to copy UI build artifacts to resources
tasks.register('copyFrontendBuild', Copy) {
	dependsOn buildFrontend
	from frontendDistDir
	into "src\\main\\resources\\static"
}

// Make sure the UI is built and copied before processing resources
processResources.dependsOn copyFrontendBuild

tasks.named('test') {
	useJUnitPlatform()
}
